{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elnur\\\\Desktop\\\\simple-login-register-system\\\\client\\\\src\\\\components\\\\LoginRegister.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LoginRegister = () => {\n  _s();\n\n  const [usernameLoginInput, setUsernameLoginInput] = useState('');\n  const [passwordLoginInput, setPasswordLoginInput] = useState('');\n  const [usernameRegisterInput, setUsernameRegisterInput] = useState('');\n  const [passwordRegisterInput, setPasswordRegisterInput] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [isMessageShown, setIsMessageShown] = useState(false);\n\n  const loginHandler = e => {\n    e.preventDefault();\n    Axios.post('http://localhost:3001/login', {\n      \"username\": usernameLoginInput,\n      \"password\": passwordLoginInput\n    }).then(res => {\n      console.log(res);\n\n      if (res.data[0]) {\n        const tempMessage = `Welcome ${res.data[0].username}!`;\n        setMessage(tempMessage);\n        setMessageType('positive');\n        setIsMessageShown(true);\n      } else {\n        setMessage('Wrong username or password!');\n        setMessageType('negative');\n        setIsMessageShown(true);\n      }\n    });\n  };\n\n  const registerHandler = e => {\n    e.preventDefault();\n    Axios.post('http://localhost:3001/register', {\n      \"username\": usernameRegisterInput,\n      \"password\": passwordRegisterInput\n    }).then(res => {\n      if (!res.data.code) {\n        setMessage('Successful registration!');\n        setMessageType('positive');\n        setIsMessageShown(true);\n      } else if (res.data.code === 'ER_DUP_ENTRY') {\n        setMessage('Username already taken.');\n        setMessageType('negative');\n        setIsMessageShown(true);\n      }\n    });\n  };\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsMessageShown(false);\n      return () => clearTimeout(timeout);\n    }, 5000);\n  }, [isMessageShown]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"formContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loginUsername\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"loginUsername\",\n        name: \"loginUsername\",\n        required: true,\n        value: usernameLoginInput,\n        onChange: e => {\n          setUsernameLoginInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loginPassword\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"loginPassword\",\n        id: \"loginPassword\",\n        required: true,\n        value: passwordLoginInput,\n        onChange: e => {\n          setPasswordLoginInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"registerUsername\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"registerUsername\",\n        name: \"registerUsername\",\n        required: true,\n        value: usernameRegisterInput,\n        onChange: e => {\n          setUsernameRegisterInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"registerPassword\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"registerPassword\",\n        id: \"registerPassword\",\n        required: true,\n        value: passwordRegisterInput,\n        onChange: e => {\n          setPasswordRegisterInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), isMessageShown ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: messageType,\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginRegister, \"uxF4r57nLrO4S/H8tfQFTdVwzos=\");\n\n_c = LoginRegister;\nexport default LoginRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"sources":["C:/Users/Elnur/Desktop/simple-login-register-system/client/src/components/LoginRegister.js"],"names":["useState","useEffect","Axios","LoginRegister","usernameLoginInput","setUsernameLoginInput","passwordLoginInput","setPasswordLoginInput","usernameRegisterInput","setUsernameRegisterInput","passwordRegisterInput","setPasswordRegisterInput","message","setMessage","messageType","setMessageType","isMessageShown","setIsMessageShown","loginHandler","e","preventDefault","post","then","res","console","log","data","tempMessage","username","registerHandler","code","timeout","setTimeout","clearTimeout","target","value"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst LoginRegister = () => {\r\n    const [usernameLoginInput, setUsernameLoginInput] = useState('');\r\n    const [passwordLoginInput, setPasswordLoginInput] = useState('');\r\n    const [usernameRegisterInput, setUsernameRegisterInput] = useState('');\r\n    const [passwordRegisterInput, setPasswordRegisterInput] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState('');\r\n    const [isMessageShown, setIsMessageShown] = useState(false);\r\n    const loginHandler = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:3001/login', {\r\n            \"username\": usernameLoginInput,\r\n            \"password\": passwordLoginInput\r\n        }).then((res) => {\r\n            console.log(res);\r\n            if (res.data[0]) {\r\n                const tempMessage = `Welcome ${res.data[0].username}!`;\r\n                setMessage(tempMessage);\r\n                setMessageType('positive');\r\n                setIsMessageShown(true);\r\n            } else {\r\n                setMessage('Wrong username or password!');\r\n                setMessageType('negative');\r\n                setIsMessageShown(true);\r\n            }\r\n        });\r\n    }\r\n    const registerHandler = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:3001/register', {\r\n            \"username\": usernameRegisterInput,\r\n            \"password\": passwordRegisterInput\r\n        }).then((res) => {\r\n            if (!res.data.code) {\r\n                setMessage('Successful registration!');\r\n                setMessageType('positive');\r\n                setIsMessageShown(true);\r\n            } else if (res.data.code === 'ER_DUP_ENTRY') {\r\n                setMessage('Username already taken.');\r\n                setMessageType('negative');\r\n                setIsMessageShown(true);\r\n            }\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        const timeout =setTimeout(() => {\r\n            setIsMessageShown(false);\r\n            return () => clearTimeout(timeout);\r\n        }, 5000);\r\n    }, [isMessageShown]);\r\n    return (\r\n        <section className='formContainer'>\r\n            <form onSubmit={loginHandler}>\r\n                <h2>Login</h2>\r\n                <label htmlFor=\"loginUsername\">Username:<span className='required'>*</span></label>\r\n                <input type=\"text\" id='loginUsername' name='loginUsername' required value={usernameLoginInput} onChange={(e) => {setUsernameLoginInput(e.target.value)}}/>\r\n                <label htmlFor=\"loginPassword\">Password:<span className='required'>*</span></label>\r\n                <input type=\"password\" name=\"loginPassword\" id=\"loginPassword\" required value={passwordLoginInput} onChange={(e) => {setPasswordLoginInput(e.target.value)}}/>\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n            <hr />\r\n            <form onSubmit={registerHandler}>\r\n                <h2>Register</h2>\r\n                <label htmlFor=\"registerUsername\">Username:<span className='required'>*</span></label>\r\n                <input type=\"text\" id='registerUsername' name='registerUsername' required value={usernameRegisterInput} onChange={(e) => {setUsernameRegisterInput(e.target.value)}}/>\r\n                <label htmlFor=\"registerPassword\">Password:<span className='required'>*</span></label>\r\n                <input type=\"password\" name=\"registerPassword\" id=\"registerPassword\" required value={passwordRegisterInput} onChange={(e) => {setPasswordRegisterInput(e.target.value)}}/>\r\n                <input type=\"submit\" value=\"Register\" />\r\n            </form>\r\n            {isMessageShown ? <p className={messageType}>{message}</p> : <></>}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LoginRegister;"]},"metadata":{},"sourceType":"module"}
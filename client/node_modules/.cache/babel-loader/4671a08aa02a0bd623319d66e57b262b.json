{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elnur\\\\Desktop\\\\simple-login-register-system\\\\client\\\\src\\\\components\\\\LoginRegister.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginRegister = () => {\n  _s();\n\n  const [usernameLoginInput, setUsernameLoginInput] = useState('');\n  const [passwordLoginInput, setPasswordLoginInput] = useState('');\n  const [usernameRegisterInput, setUsernameRegisterInput] = useState('');\n  const [passwordRegisterInput, setPasswordRegisterInput] = useState('');\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const [messageType, setMessageType] = useState('');\n  const [isMessageShown, setIsMessageShown] = useState(false);\n\n  const loginHandler = e => {\n    e.preventDefault();\n    Axios.post('http://localhost:3001/login', {\n      \"username\": usernameLoginInput,\n      \"password\": passwordLoginInput\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  const registerHandler = e => {\n    e.preventDefault();\n    Axios.post('http://localhost:3001/register', {\n      \"username\": usernameRegisterInput,\n      \"password\": passwordRegisterInput\n    }).then(res => {\n      if (res.data[0]) {\n        setMessage('Successful registration!');\n        setMessageType('Positive');\n        setIsMessageShown(true);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"formContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: loginHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loginUsername\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"loginUsername\",\n        name: \"loginUsername\",\n        required: true,\n        value: usernameLoginInput,\n        onChange: e => {\n          setUsernameLoginInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"loginPassword\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 57\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"loginPassword\",\n        name: \"loginPassword\",\n        id: \"loginPassword\",\n        required: true,\n        value: passwordLoginInput,\n        onChange: e => {\n          setPasswordLoginInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registerHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"registerUsername\",\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"registerUsername\",\n        name: \"registerUsername\",\n        required: true,\n        value: usernameRegisterInput,\n        onChange: e => {\n          setUsernameRegisterInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"registerPassword\",\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"required\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 60\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"registerPassword\",\n        id: \"registerPassword\",\n        required: true,\n        value: passwordRegisterInput,\n        onChange: e => {\n          setPasswordRegisterInput(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginRegister, \"J0q8WbMOmI8xdRhvdjasHW8q0Yo=\");\n\n_c = LoginRegister;\nexport default LoginRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginRegister\");","map":{"version":3,"sources":["C:/Users/Elnur/Desktop/simple-login-register-system/client/src/components/LoginRegister.js"],"names":["useState","Axios","LoginRegister","usernameLoginInput","setUsernameLoginInput","passwordLoginInput","setPasswordLoginInput","usernameRegisterInput","setUsernameRegisterInput","passwordRegisterInput","setPasswordRegisterInput","username","setUsername","message","setMessage","messageType","setMessageType","isMessageShown","setIsMessageShown","loginHandler","e","preventDefault","post","then","res","console","log","registerHandler","data","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport Axios from 'axios';\r\n\r\nconst LoginRegister = () => {\r\n    const [usernameLoginInput, setUsernameLoginInput] = useState('');\r\n    const [passwordLoginInput, setPasswordLoginInput] = useState('');\r\n    const [usernameRegisterInput, setUsernameRegisterInput] = useState('');\r\n    const [passwordRegisterInput, setPasswordRegisterInput] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [messageType, setMessageType] = useState('');\r\n    const [isMessageShown, setIsMessageShown] = useState(false);\r\n    const loginHandler = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:3001/login', {\r\n            \"username\": usernameLoginInput,\r\n            \"password\": passwordLoginInput\r\n        }).then((res) => {console.log(res)});\r\n    }\r\n    const registerHandler = (e) => {\r\n        e.preventDefault();\r\n        Axios.post('http://localhost:3001/register', {\r\n            \"username\": usernameRegisterInput,\r\n            \"password\": passwordRegisterInput\r\n        }).then((res) => {\r\n            if (res.data[0]) {\r\n                setMessage('Successful registration!');\r\n                setMessageType('Positive');\r\n                setIsMessageShown(true);\r\n            }\r\n        });\r\n    }\r\n    return (\r\n        <section className='formContainer'>\r\n            <form onSubmit={loginHandler}>\r\n                <h2>Login</h2>\r\n                <label htmlFor=\"loginUsername\">Username:<span className='required'>*</span></label>\r\n                <input type=\"text\" id='loginUsername' name='loginUsername' required value={usernameLoginInput} onChange={(e) => {setUsernameLoginInput(e.target.value)}}/>\r\n                <label htmlFor=\"loginPassword\">Password:<span className='required'>*</span></label>\r\n                <input type=\"loginPassword\" name=\"loginPassword\" id=\"loginPassword\" required value={passwordLoginInput} onChange={(e) => {setPasswordLoginInput(e.target.value)}}/>\r\n                <input type=\"submit\" value=\"Login\" />\r\n            </form>\r\n            <hr />\r\n            <form onSubmit={registerHandler}>\r\n                <h2>Register</h2>\r\n                <label htmlFor=\"registerUsername\">Username:<span className='required'>*</span></label>\r\n                <input type=\"text\" id='registerUsername' name='registerUsername' required value={usernameRegisterInput} onChange={(e) => {setUsernameRegisterInput(e.target.value)}}/>\r\n                <label htmlFor=\"registerPassword\">Password:<span className='required'>*</span></label>\r\n                <input type=\"password\" name=\"registerPassword\" id=\"registerPassword\" required value={passwordRegisterInput} onChange={(e) => {setPasswordRegisterInput(e.target.value)}}/>\r\n                <input type=\"submit\" value=\"Register\" />\r\n            </form>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default LoginRegister;"]},"metadata":{},"sourceType":"module"}